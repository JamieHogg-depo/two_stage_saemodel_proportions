Model = model) %>%
group_by(Scenario) %>%
mutate(MRF_rr = MRRMSE_FALSE / MRRMSE_FALSE[5],
MAF_rr = MARB_FALSE / MARB_FALSE[5],
MRT_rr = MRRMSE_TRUE / MRRMSE_TRUE[5],
MAT_rr = MARB_TRUE / MARB_TRUE[5])
rm(list=ls())
library(tidyverse)
library(patchwork)
library(knitr)
library(readr)
library(ggtext)
library(latex2exp)
setwd("C:/r_proj/two_stage_saemodel_proportions")
#cur_date <- "20230201"
cur_date <- "20231025"
# pr_all <- readRDS(paste0("ResultsHPC/", cur_date, "/pr_all.rds"))
# sim_list <- readRDS(paste0("ResultsHPC/", cur_date, "/sim_list.rds"))
# loc_plots <- paste0("ResultsHPC/", cur_date, "/plots")
# loc_sheets <- paste0("ResultsHPC/", cur_date, "/sheets")
pr_all <- readRDS("data/pr_all.rds")
sim_list <- readRDS("data/sim_list.rds")
loc_plots <- paste0("simulation_study/plots/", cur_date, "/")
loc_sheets <- paste0("simulation_study/sheets")
# Load modeled results
spm_pa <- readRDS(paste0("data/", cur_date, "/spm_pa.rds"))
spm_global <- readRDS(paste0("data/", cur_date, "/spm_global.rds"))
fp_global <- readRDS(paste0("data/", cur_date, "/fp_global.rds"))
spm_global %>%
#bind_rows(pr_all$spm_global, .id = "QaS") %>%
filter_w_tsln() %>% rename_w_tsln() %>%
group_by(QaS, model, missing) %>%
summarise(MRRMSE = median(RRMSE),
MARB = median(ARB),
.groups = "drop") %>%
arrange(QaS, missing, MRRMSE) %>%
pivot_wider(values_from = c(MARB, MRRMSE),
names_from = missing) %>%
left_join(.,post_sd, by = c("QaS", "model")) %>%
left_join(.,freq_cov_wide, by = c("QaS", "model")) %>%
relocate(QaS, model, MRRMSE_FALSE, MARB_FALSE, CI_size_FALSE, Coverage_FALSE, MRRMSE_TRUE, MARB_TRUE) %>%
arrange(QaS, model) %>%
rename(Scenario = QaS,
Model = model) %>%
group_by(Scenario) %>%
mutate(MRF_rr = MRRMSE_FALSE / MRRMSE_FALSE[5],
MAF_rr = MARB_FALSE / MARB_FALSE[5],
MRT_rr = MRRMSE_TRUE / MRRMSE_TRUE[5],
MAT_rr = MARB_TRUE / MARB_TRUE[5])
filter_w_tsln <- function(.data){filter(.data, model %in% c("BETA", "s2LN",
"BIN", "LOG",
"ELN", "HT_Direct"))}
rename_w_tsln <- function(.data){
mutate(.data,
model = ifelse(model == "s2LN", "TSLN", model),
model = ifelse(model == "HT_Direct", "HT", model))
}
make_numeric_decimal <- function(.data){
df <- .data
cols_to_format <- unlist(lapply(df, is.numeric))
df[,cols_to_format] <- bind_cols(lapply(df[,cols_to_format], sprintf, fmt = '%#.2f'))
return(df)
}
getMedIQR_aschar <- function(x, digits = 2, na.rm = TRUE){
fmt = paste0('%#.', digits, "f")
if(digits == 0) fmt = '%0.0f'
med <- sprintf(median(x, na.rm = na.rm), fmt = fmt)
lower <- sprintf(unname(quantile(x, probs = 0.25, na.rm = na.rm)), fmt = fmt)
upper <- sprintf(unname(quantile(x, probs = 0.75, na.rm = na.rm)), fmt = fmt)
paste0(med, " (", lower, ", ", upper, ")")
}
jsave <- function(filename, base_folder,
plot = last_plot(),
square = T,
square_size = 5000,
scale = 1,
ratio = c(6,9),
dpi = 1000){
if(square){
for(sub in c(".png", ".tiff", ".pdf", ".eps")){
ggsave(filename = paste0(filename, sub),
plot = plot,
path = base_folder,
dpi = dpi,
width = square_size,
height = square_size,
scale = scale,
units = "px")
}
}else{
total = square_size^2
a <- sqrt((total*ratio[1])/ratio[2])
b <- (ratio[2]*a)/ratio[1]
for(sub in c(".png", ".tiff", ".pdf", ".eps")){
ggsave(filename = paste0(filename, sub),
plot = plot,
path = base_folder,
dpi = dpi,
width = round(b),
height = round(a),
scale = scale,
units = "px")
}
}
}
spm_global %>%
#bind_rows(pr_all$spm_global, .id = "QaS") %>%
filter_w_tsln() %>% rename_w_tsln() %>%
group_by(QaS, model, missing) %>%
summarise(MRRMSE = median(RRMSE),
MARB = median(ARB),
.groups = "drop") %>%
arrange(QaS, missing, MRRMSE) %>%
pivot_wider(values_from = c(MARB, MRRMSE),
names_from = missing) %>%
left_join(.,post_sd, by = c("QaS", "model")) %>%
left_join(.,freq_cov_wide, by = c("QaS", "model")) %>%
relocate(QaS, model, MRRMSE_FALSE, MARB_FALSE, CI_size_FALSE, Coverage_FALSE, MRRMSE_TRUE, MARB_TRUE) %>%
arrange(QaS, model) %>%
rename(Scenario = QaS,
Model = model) %>%
group_by(Scenario) %>%
mutate(MRF_rr = MRRMSE_FALSE / MRRMSE_FALSE[5],
MAF_rr = MARB_FALSE / MARB_FALSE[5],
MRT_rr = MRRMSE_TRUE / MRRMSE_TRUE[5],
MAT_rr = MARB_TRUE / MARB_TRUE[5])
# Get median 95 credible interval sizes
post_sd <- spm_pa %>%
#bind_rows(pr_all$spm_pa, .id="QaS") %>%
dplyr::select(area, QaS, rep_counter, missing, contains("ci_size")) %>%
rename_with(~gsub("_ci_size", "", .x)) %>%
pivot_longer(-c(area, QaS, missing, rep_counter)) %>%
group_by(QaS, name, missing) %>%
summarise(psd = median(value, na.rm = T),
.groups = "drop") %>%
rename(model = name) %>%
filter_w_tsln() %>% rename_w_tsln() %>%
pivot_wider(values_from = psd,
names_from = missing) %>%
rename("CI_size_FALSE" = "FALSE",
"CI_size_TRUE" = "TRUE") %>%
mutate_if(is.numeric, function(x){round(x, digits = 2)})
# frequentist coverage
freq_cov <- spm_pa %>%
#bind_rows(pr_all$spm_pa, .id = "QaS") %>%
dplyr::select(ends_with(c("upper", "lower")), area, prop, QaS, rep_counter, missing) %>%
pivot_longer(-c(area, prop, QaS, rep_counter, missing)) %>%
separate(name, c("model", "metric")) %>%
pivot_wider(names_from = metric,
values_from = value) %>%
mutate(in_ci = ifelse(prop > lower & prop < upper, 1, 0)) %>%
group_by(QaS, model, missing) %>%
summarise(Coverage = round(mean(in_ci, na.rm = T), 2)) %>%
filter_w_tsln() %>% rename_w_tsln()
freq_cov_wide <- freq_cov %>%
pivot_wider(values_from = Coverage,
names_from = missing) %>%
rename("Coverage_FALSE" = "FALSE",
"Coverage_TRUE" = "TRUE")
temp <- spm_global %>%
#bind_rows(pr_all$spm_global, .id = "QaS") %>%
filter_w_tsln() %>% rename_w_tsln() %>%
group_by(QaS, model, missing) %>%
summarise(MRRMSE = median(RRMSE),
MARB = median(ARB),
.groups = "drop") %>%
arrange(QaS, missing, MRRMSE) %>%
pivot_wider(values_from = c(MARB, MRRMSE),
names_from = missing) %>%
left_join(.,post_sd, by = c("QaS", "model")) %>%
left_join(.,freq_cov_wide, by = c("QaS", "model")) %>%
relocate(QaS, model, MRRMSE_FALSE, MARB_FALSE, CI_size_FALSE, Coverage_FALSE, MRRMSE_TRUE, MARB_TRUE) %>%
arrange(QaS, model) %>%
rename(Scenario = QaS,
Model = model) %>%
group_by(Scenario) %>%
mutate(MRF_rr = MRRMSE_FALSE / MRRMSE_FALSE[5],
MAF_rr = MARB_FALSE / MARB_FALSE[5],
MRT_rr = MRRMSE_TRUE / MRRMSE_TRUE[5],
MAT_rr = MARB_TRUE / MARB_TRUE[5])
temp
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(contains("MRT|MRF"))
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(contains(c("MRT", "MRF")))
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, model, contains(c("MRT", "MRF")))
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, Model, contains(c("MRT", "MRF")))
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains(c("MRT", "MRF"))) %>%
slice_min(MRT_rr, 1)
?slice_min
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains(c("MRT", "MRF"))) %>%
slice_min(MRT_rr, n =1)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains(c("MRT", "MRF"))) %>%
pivot_longer(-Scenario)
slice_min(value, n =1)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains(c("MRT", "MRF"))) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "TSLN")
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MRF"))
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MRF")) %>%
pivot_longer(-Scenario)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MRF")) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MAF")) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MAT")) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MAT")) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1) %>%
mutate(v = 1- value)
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("MAT")) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1) %>%
mutate(v = 100*(1- value))
temp
temp %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, contains("Coverage"))
temp %>%
filter(Model != "BIN") %>%
dplyr::select(Scenario, contains("CI_size"))
temp %>%
filter(Model != "BIN") %>%
dplyr::select(Scenario, Model, contains("CI_size"))
temp %>%
filter(Model != "BIN") %>%
dplyr::select(Scenario, Model, contains("CI_size")) %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
MAF_rr = CI_size_TRUE / CI_size_TRUE[4])
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, contains("_rr"))
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, contains("_rr")) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, contains("_rr"))
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, contains("_rr")) %>% view()
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, T_rr, F_rr) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1) %>%
mutate(v = 100*(1- value))
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, T_rr, F_rr)
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, T_rr, F_rr) %>%
pivot_longer(-Scenario)
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
dplyr::select(Scenario, T_rr, F_rr) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, T_rr, F_rr) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, F_rr) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp %>%
filter(Model != "BIN") %>%
mutate(F_rr = CI_size_FALSE / CI_size_FALSE[4],
T_rr = CI_size_TRUE / CI_size_TRUE[4]) %>%
filter(Model != "TSLN") %>%
dplyr::select(Scenario, T_rr) %>%
pivot_longer(-Scenario) %>%
slice_min(value, n = 1)
temp
temp %>%
filter(Model != "BIN",
Scenario %in% c(3,4))
temp %>%
filter(Model != "BIN",
Scenario %in% c(3,4)) %>%
filter(Model %in% c("TSLN", "ELN")) %>% view()
temp %>%
filter(Model != "BIN",
Scenario %in% c(3,4)) %>%
filter(Model %in% c("TSLN", "BETA")) %>% view()
temp %>%
filter(Model != "BIN",
Scenario %in% c(3,4)) %>%
filter(Model %in% c("TSLN", "LOG")) %>% view()
start_table4 <-spm_global %>%
filter_w_tsln() %>% rename_w_tsln() %>%
group_by(QaS, model, missing) %>%
summarise(MRRMSE = median(RRMSE),
MARB = median(ARB),
Mcrpsprop = median(crpsprop),
Mcrpslogit = median(crpslogit),
.groups = "drop") %>%
arrange(QaS, missing, MRRMSE) %>%
pivot_wider(values_from = c(MARB, MRRMSE, Mcrpsprop, Mcrpslogit),
names_from = missing) %>%
left_join(.,post_sd, by = c("QaS", "model")) %>%
left_join(.,freq_cov_wide, by = c("QaS", "model")) %>%
# put in correct order
relocate(QaS, model, contains("_FALSE")) %>%
#dplyr::select(-contains("logit")) %>%
dplyr::select(-contains("prop")) %>%
# arrange and rename
arrange(QaS, model)
# start table
start_table6 <- fp_global %>%
#filter_w_tsln() %>%
arrange(QaS, missing, MSE) %>%
group_by(QaS, missing) %>%
mutate(id = 1:length(unique(model))) %>%
ungroup() %>%
mutate(Bias = 100*(Bias^2),
Variance = 100*Variance,
MSE = 100*MSE) %>%
dplyr::select(missing, model, Bias, Variance, QaS, MSE) %>%
#rename_w_tsln() %>%
arrange(QaS, missing, model) %>%
mutate(Bias = round(Bias, digits =2),
Variance = round(Variance, digits =2),
MSE = round(MSE, digits =2)) %>%
left_join(.,freq_cov, by = c("QaS", "missing", "model")) %>%
rename(Scenario = QaS) %>%
mutate(model = fct_relevel(as.factor(model), "HT")) %>%
pivot_wider(names_from = missing,
values_from = c(Bias, Variance, MSE, Coverage)) %>%
relocate(Scenario, model,
Bias_FALSE, Variance_FALSE, MSE_FALSE, Coverage_FALSE) %>%
arrange(Scenario, model) %>%
left_join(.,dplyr::select(start_table4, QaS, model, Mcrpslogit_TRUE, Mcrpslogit_FALSE),
by = c("model", "Scenario" = "QaS"))
# Get ratios
rankIT <- function(x){paste0("(", sprintf(x/x[8], fmt = '%#.2f'), ")")}
ratios <- start_table6 %>%
dplyr::select(-contains("Coverage")) %>%
group_by(Scenario) %>%
mutate_at(vars(-c("Scenario", "model")), rankIT) %>% ungroup() %>%
setNames(c("Scenario", "model", paste0("Baseline", names(.)[-c(1,2)]))) %>%
dplyr::select(-c(Scenario, model))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(-contains(c("Bias", "Variance", "Coverage"))) %>%
mutate(Scenario = paste0("Sc", Scenario)) %>%
dplyr::select(c("Scenario", "model",
"MSE_FALSE", "BaselineMSE_FALSE",
"MSE_TRUE", "BaselineMSE_TRUE")) %>%
filter(!model %in% c("BINpp", "s1LN")) %>%
rename_w_tsln() %>%
mutate(model = factor(model, levels = c("HT", "BETA", "BIN", "ELN", "LOG", "TSLN")))  %>%
group_by(model) %>% mutate(id = cur_group_id()) %>% ungroup() %>%
mutate(Scenario = ifelse(id == 1, Scenario, "")) %>% dplyr::select(-id) %>%
make_numeric_decimal() %>%
mutate(MSE_FALSE = paste0(MSE_FALSE, " ", BaselineMSE_FALSE),
MSE_TRUE = paste0(MSE_TRUE, " ", BaselineMSE_TRUE)) %>%
dplyr::select(c(1,2,3,5)) %>%
setNames(str_remove_all(colnames(.), "_.*"))
ratios
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(-contains(c("Bias", "Variance", "Coverage")))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("MSE")))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE")))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(model != "TSLN")
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("TSLN", "BINpp"))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp"))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp")) %>%
group_by(Scenario) %>%
slice_min(BaselineMSE_TRUE, n = 1)
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp")) %>%
group_by(Scenario) %>%
slice_min(BaselineMSE_FALSE, n = 1)
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp"))
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp")) %>%
group_by(Scenario) %>%
slice_min(BaselineMSE_FALSE, n = 1)
start_table6 %>%
bind_cols(ratios) %>%
dplyr::select(Scenario, model, contains(c("BaselineMSE"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp"))
start_table6
start_table6 %>%
mutate(T_rr = MSE_TRUE/MSE_TRUE[8],
F_rr = MSE_FALSE/MSE_FALSE[8])
start_table6 %>%
mutate(T_rr = MSE_TRUE/MSE_TRUE[8],
F_rr = MSE_FALSE/MSE_FALSE[8]) %>%
dplyr::select(Scenario, model, contains(c("_rr")))
start_table6 %>%
mutate(Ns_rr = MSE_TRUE/MSE_TRUE[8],
S_rr = MSE_FALSE/MSE_FALSE[8]) %>%
dplyr::select(Scenario, model, contains(c("_rr")))
start_table6 %>%
mutate(Ns_rr = MSE_TRUE/MSE_TRUE[8],
S_rr = MSE_FALSE/MSE_FALSE[8]) %>%
dplyr::select(Scenario, model, contains(c("_rr"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp"))
start_table6 %>%
mutate(Ns_rr = MSE_TRUE/MSE_TRUE[8],
S_rr = MSE_FALSE/MSE_FALSE[8]) %>%
dplyr::select(Scenario, model, contains(c("_rr"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp")) %>%
group_by(Scenario) %>%
slice_min(S_rr, n = 1)
start_table6 %>% view()
8*6
start_table6 %>%
group_by(Scenario) %>%
mutate(Ns_rr = MSE_TRUE/MSE_TRUE[8],
S_rr = MSE_FALSE/MSE_FALSE[8]) %>% ungroup() %>%
dplyr::select(Scenario, model, contains(c("_rr"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp")) %>%
group_by(Scenario) %>%
slice_min(S_rr, n = 1)
start_table6 %>%
group_by(Scenario) %>%
mutate(Ns_rr = MSE_TRUE/MSE_TRUE[8],
S_rr = MSE_FALSE/MSE_FALSE[8]) %>% ungroup() %>%
dplyr::select(Scenario, model, contains(c("_rr"))) %>%
filter(!model %in% c("s1LN", "s2LN", "BINpp")) %>%
group_by(Scenario) %>%
slice_min(Ns_rr, n = 1)
